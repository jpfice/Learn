{
  "keywordFileContentHash": "197C5C3C34B301F0BC20458952A3A0F1",
  "keywordClasses": [
    {
      "name": "com.jv.key.JvUtil",
      "keywordMethods": [
        {
          "name": "isElementPresent",
          "parameters": [
            {
              "name": "to",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "timeout",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Check元素の存在\n\t * @param to Katalon test object\n\t * @param timeout time to wait for element to show up\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "click",
          "parameters": [
            {
              "name": "TestObjectID",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Click元素\n\t * @param TestObjectID\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "clickElement",
          "parameters": [
            {
              "name": "TestObjectID",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Click元素\n\t * @param TestObjectID\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "clickElement",
          "parameters": [
            {
              "name": "TestObjectID",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "ClickType",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Click元素\n\t * @param TestObjectID\n\t * @param ClickType 可点击、可见、可见可点击\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "clickClickAbleElement",
          "parameters": [
            {
              "name": "TestObjectID",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Check if element present in timeout\n\t * @param to Katalon test object\n\t * @param timeout time to wait for element to show up\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "clickVisibleElement",
          "parameters": [
            {
              "name": "TestObjectID",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Check if element present in timeout\n\t * @param to Katalon test object\n\t * @param timeout time to wait for element to show up\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "clickClickAbleAndVisibleElement",
          "parameters": [
            {
              "name": "TestObjectID",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Check if element present in timeout\n\t * @param to Katalon test object\n\t * @param timeout time to wait for element to show up\n\t * @return true if element present, otherwise false\n\t */"
        },
        {
          "name": "getJvHtmlTableRows",
          "parameters": [
            {
              "name": "table",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "meetName",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "status",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Get all rows of HTML table\n\t * @param table Katalon test object represent for HTML table\n\t * @param outerTagName outer tag name of TR tag, usually is TBODY\n\t * @return All rows inside HTML table\n\t */"
        },
        {
          "name": "getMailUrl",
          "parameters": [
            {
              "name": "to",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "timeout",
              "initialExpression": "",
              "type": {
                "fullClassName": "int",
                "unresolvedClassName": "int",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": true,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": ""
        },
        {
          "name": "getHtmlTableColumns",
          "parameters": [
            {
              "name": "row",
              "initialExpression": "",
              "type": {
                "fullClassName": "org.openqa.selenium.WebElement",
                "unresolvedClassName": "WebElement",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            },
            {
              "name": "tagName",
              "initialExpression": "",
              "type": {
                "fullClassName": "java.lang.String",
                "unresolvedClassName": "String",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Get all cells of HTML table row\n\t * @param row a WebElement instance represent for HTML table row\n\t * @param tagName HTML column tag name, usually is TD/TH\n\t * @return All cells inside HTML table row\n\t */"
        },
        {
          "name": "refreshBrowser",
          "parameters": [],
          "javadoc": "/**\n\t * Refresh browser\n\t */"
        },
        {
          "name": "clickElement",
          "parameters": [
            {
              "name": "to",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Click element\n\t * @param to Katalon test object\n\t */"
        },
        {
          "name": "getSystemDate",
          "parameters": [],
          "javadoc": "/**\n\t * Get SysDate\n\t * @param null\n\t * @return SysDate(yyyyMMddHHmmss)\n\t */"
        },
        {
          "name": "clickUsingJS",
          "parameters": [
            {
              "name": "to",
              "initialExpression": "",
              "type": {
                "fullClassName": "com.kms.katalon.core.testobject.TestObject",
                "unresolvedClassName": "TestObject",
                "isArray": false,
                "isGnericsPlaceHolder": false,
                "hasImmutableClassName": false,
                "genericsTypes": [],
                "errorOnParsing": false
              }
            }
          ],
          "javadoc": "/**\n\t * Get clickUsingJS\n\t * @param TestObject\n\t * @return null\n\t */"
        },
        {
          "name": "getSData",
          "parameters": [],
          "javadoc": "/**\n\t * getSData\n\t * @param なし\n\t * @return Map\u003cString, String\u003e\n\t */"
        }
      ]
    }
  ],
  "javadocParsed": true
}